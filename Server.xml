<?xml version="1.0" encoding="UTF-8" ?>

<Server version="8">
        <Name>OvenMediaEngine</Name>
        <!-- Host type (origin/edge) -->
        <Type>origin</Type>
        <!-- Specify IP address to bind (* means all IPs) -->
        <IP>*</IP>
        <PrivacyProtection>false</PrivacyProtection>
        <!--
        To get the public IP address(mapped address of stun) of the local server.
        This is useful when OME cannot obtain a public IP from an interface, such as AWS or docker environment.
        If this is successful, you can use ${PublicIP} in your settings.
        -->
        <StunServer>stun.ovenmediaengine.com:13478</StunServer>
        <Modules>
                <!--
                Currently OME only supports h2 like all browsers do. Therefore, HTTP/2 only works on TLS ports.
                -->
                <HTTP2>
                        <Enable>true</Enable>
                </HTTP2>
                <LLHLS>
                </LLHLS>
                <!-- P2P works only in WebRTC and is experiment feature -->
                <P2P>
                        <!-- disabled by default -->
                        <Enable>false</Enable>
                        <MaxClientPeersPerHostPeer>1</MaxClientPeersPerHostPeer>
                </P2P>
        </Modules>
        <!-- Settings for the ports to bind -->
        <Bind>
                <!-- Enable this configuration if you want to use API Server -->
				<!--
                <Managers>
                        <API>
                                <Port>8081</Port>
                                <WorkerCount>1</WorkerCount>
                        </API>
                </Managers>
				-->
                <Providers>
                        <!-- Pull providers -->
                        <!-- Push providers -->
                <WebRTC>
                        <Signalling>
                                <Port>3333</Port>
                                <!-- <TLSPort>3334</TLSPort> -->
                                <WorkerCount>2</WorkerCount>
                        </Signalling>

                        <IceCandidates>
                                <IceCandidate>*:10000-10005/udp</IceCandidate>
                                <!--
                                        If you want to stream WebRTC over TCP, specify IP:Port for TURN server.
                                        This uses the TURN protocol, which delivers the stream from the built-in TURN server to the player's TURN client over TCP.
                                        For detailed information, refer https://airensoft.gitbook.io/ovenmediaengine/streaming/webrtc-publishing#webrtc-over-tcp
                                -->
                                <TcpRelay>*:3478</TcpRelay>
                                <!-- TcpForce is an option to force the use of TCP rather than UDP in WebRTC streaming. (You can omit ?transport=tcp accordingly.) If <TcpRelay> is not set, playback may fail. -->
                                <TcpForce>true</TcpForce>
                                <TcpRelayWorkerCount>2</TcpRelayWorkerCount>
                        </IceCandidates>
                </WebRTC>
                        <RTMP>
                                <Port>1935</Port>
                        </RTMP>
                </Providers>
                <Publishers>
                        <OVT>
                                <!-- <Port>9000</Port> -->
								<!-- <WorkerCount>2</WorkerCount> -->
                        </OVT>
                        <WebRTC>
                                <Signalling>
                                        <Port>3333</Port> 
                                         <!-- <TLSPort>3334</TLSPort> -->
                                        <WorkerCount>2</WorkerCount>
                                </Signalling>
                                <IceCandidates>
                                        <IceCandidate>*:10000-10005/udp</IceCandidate>
                                        <!--
                                                If you want to stream WebRTC over TCP, specify IP:Port for TURN server.
                                                This uses the TURN protocol, which delivers the stream from the built-in TURN server to the player's TURN client over TCP.
                                                For detailed information, refer https://airensoft.gitbook.io/ovenmediaengine/streaming/webrtc-publishing#webrtc-over-tcp
                                        -->
                                        <TcpRelay>*:3478</TcpRelay>
                                        <!-- TcpForce is an option to force the use of TCP rather than UDP in WebRTC streaming. (You can omit ?transport=tcp accordingly.) If <TcpRelay> is not set, playback may fail. -->
                                        <TcpForce>true</TcpForce>
                                        <TcpRelayWorkerCount>2</TcpRelayWorkerCount>
                                </IceCandidates>
                        </WebRTC>
                </Publishers>
        </Bind>
		
		<!--
		Enable this configuration if you want to use API Server
		
		<AccessToken> is a token for authentication, and when you invoke the API, you must put "Basic base64encode(<AccessToken>)" in the "Authorization" header of HTTP request.
		For example, if you set <AccessToken> to "ome-access-token", you must set "Basic b21lLWFjY2Vzcy10b2tlbg==" in the "Authorization" header.
		-->
		<!--
        <Managers>
                <Host>
                        <Names>
                                <Name>172.31.35.205</Name>
                        </Names>
                        <TLS>
                                <CertPath>path/to/file.crt</CertPath>
                                <KeyPath>path/to/file.key</KeyPath>
                                <ChainCertPath>path/to/file.crt</ChainCertPath>
                        </TLS>
                </Host>
                <API>
                        <AccessToken>ome-access-token</AccessToken>
                </API>
        </Managers>
		-->
		
        <VirtualHosts>
                        <!--
                        You can include multiple XML files by doing the following:
                        <VirtualHost include="sites-enabled/*.xml" />
                        -->
                <VirtualHost include="VHost*.xml" />
                <VirtualHost>
                        <Name>default</Name>
                        <!--Distribution is a value that can be used when grouping the same vhost distributed across multiple servers. This value is output to the events log, so you can use it to aggregate statistics. -->
                        <Distribution>ovenmediaengine.com</Distribution>

                        <!-- Settings for multi ip/domain and TLS -->
                        <Host>
                                <Names>
                                        <!-- Host names
                                                <Name>stream1.airensoft.com</Name>
                                                <Name>stream2.airensoft.com</Name>
                                                <Name>*.sub.airensoft.com</Name>
                                                <Name>192.168.0.1</Name>
                                        -->
                                        <Name>*</Name>
                                        <!-- <Name>172.31.35.205</Name> -->
                                </Names>
								<!--
                                <TLS>
										<CertPath>path/to/file.crt</CertPath>
										<KeyPath>path/to/file.key</KeyPath>
										<ChainCertPath>path/to/file.crt</ChainCertPath>
                                </TLS>
								-->
                        </Host>

                        <!--
                        <SignedPolicy>
                                <PolicyQueryKeyName>policy</PolicyQueryKeyName>
                                <SignatureQueryKeyName>signature</SignatureQueryKeyName>
                                <SecretKey>iwvW43EpM%#2p</SecretKey>
                                <Enables>
                                        <Providers>rtmp</Providers>
                                </Enables>
                        </SignedPolicy>
                        -->
                        <!--
                        <OriginMapStore>
                                In order to use OriginMap, you must enable OVT Publisher in Origin and OVT Provider in Edge.                                <RedisServer>
                                        <Host>192.168.0.160:6379</Host>
                                        <Auth>!@#ovenmediaengine</Auth>
                                </RedisServer>

                                This is only needed for the origin server and used to register the ovt address of the stream.
                                <OriginHostName>ome-dev.airensoft.com</OriginHostName>
                        </OriginMapStore>
                        -->
                        <!-- Settings for applications -->
                        <Applications>
                                <Application>
                                        <Name>app</Name>
                                        <!-- Application type (live/vod) -->
                                        <Type>live</Type>
                                        <OutputProfiles>
                                                <OutputProfile>
                                                        <Name>bypass_stream</Name>
                                                        <OutputStreamName>${OriginStreamName}</OutputStreamName>
                                                        <Encodes>
                                                                <Audio>
                                                                        <Codec>opus</Codec>
                                                                        <Bitrate>128000</Bitrate>
                                                                        <Samplerate>48000</Samplerate>
                                                                        <Channel>2</Channel>
                                                                </Audio>
                                                                <Video>
                                                                        <Name>bypass_video</Name>
                                                                        <Bypass>true</Bypass>
                                                                </Video>
                                                        </Encodes>
                                                </OutputProfile>
                                        </OutputProfiles>
                                        <Providers>
                                                <WebRTC />
                                                <RTMP />
                                        </Providers>
                                        <Publishers>
                                                <AppWorkerCount>2</AppWorkerCount>
                                                <StreamWorkerCount>8</StreamWorkerCount>
                                                <WebRTC>
                                                        <Timeout>30000</Timeout>
                                                        <Rtx>false</Rtx>
                                                        <Ulpfec>false</Ulpfec>
                                                        <JitterBuffer>false</JitterBuffer>
                                                </WebRTC>
                                                <OVT />
                                        </Publishers>
                                </Application>
                        </Applications>
                </VirtualHost>
        </VirtualHosts>
</Server>
